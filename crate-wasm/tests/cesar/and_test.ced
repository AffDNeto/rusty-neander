; Testes AND
CLR R0
CLR R1
MOV MAX R3

; TESTE ENDEREÃ‡AMENTO
; SRC/DST REGISTRADOR
INC R0
MOV R3 R1
AND R0 R1
MOV R1 -(R6)

; SRC POS INC
INC R0
MOV R3 R1
AND #2 R1   ; #TAG = (R7)+
MOV R1 -(R6)

; DST POS INC
INC R0
MOV R3 R1
AND R1 #1   ; mesmo que AND R1 (R7)+

; SRC PRE DEC
INC R0
MOV R3 R1
AND -(R6) R1
MOV R1 -(R6)

; DST PRE DEC
INC R0
MOV R3 R1
AND R1 -(R6)

; SRC INDEXADO
INC R0
MOV #T R2
AND 2(R2) -(R6)

; DST INDEXADO
INC R0
MOV #T R2
MOV R3 R1
AND R1 2(R2)   ; escreve em T_IDX

; SRC INDIRETO
INC R0
MOV #T R2
AND (R2) -(R6)

; DST INDIRETO
INC R0
MOV #T R2
MOV R3 R1
AND R1 (R2)

; SRC INDIRETO POS INC
INC R0
AND TMP -(R6)   ;TMP=((R7)+) para a pilha 

; DST INDIRETO POS INC
INC R0
AND R0 TI_POS_INC   ; Mesmo que MOV R0 ((R7)+)

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
AND (-(R1)) -(R6)   ; escreve TI_PRE_DEC na pilha

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
AND R0 (-(R1))      ; escreve em TI_PRE_DEC

; SRC INDIRETO INDEXADO
INC R0
MOV #TI_IDX TMP
MOV #TMP R1
AND (-2(R1)) -(R6)  ; escreve TI_IDX na pilha

; SRC INDIRETO INDEXADO
INC R0
MOV #TI_IDX TMP
MOV #TMP R1
AND R0 (-2(R1))     ; escreve em TI_IDX

CCC ZNC
SCC V
; FLAGS
INC R0
MOV TRUE R1
AND A R1    ; 0xF0F0 and 0xFFFF = 0xF0F0
BEQ ERR
BPL ERR
BCS ERR
BVS ERR

; A and A = A
INC R0
MOV A R1
AND A R1
CMP R1 A
BNE ERR
BVS ERR

; A and TRUE = A
INC R0
MOV A R1
AND TRUE R1
CMP R1 A
BNE ERR
BVS ERR

; A and FALSE = FALSE
INC R0
MOV A R1
AND FALSE R1
CMP R1 FALSE
BNE ERR
BVS ERR

; A and (NOT A) = FALSE
INC R0
MOV A R1
AND NOT_A R1
CMP R1 FALSE
BNE ERR
BVS ERR

JMP END
ERR:
MOV R0 COUNTER
MOV #1 E
END:
HLT

ORG 1024
STACK: 0
E: 0
COUNTER: 0
FALSE: H0000
TRUE: HFFFF
A: HF0F0
NOT_A: H0F0F
T_PRE_DEC: 1
T: 2
T_IDX:3
TI_POS_INC: 5
TI_PRE_DEC:6
TI_IDX: 7
TMP: 8