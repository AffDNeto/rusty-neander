; Testes MOV
CLR R0

; TESTE ENDEREÇAMENTO
; SRC/DST REGISTRADOR
INC R0
MOV R0 R1

; SRC POS INC
INC R0
MOV #STACK R6   ; #TAG = (R7)+

; DST POS INC
INC R0
MOV R1 #0   ; mesmo que MOV R1 (R7)+

; SRC PRE DEC
INC R0
MOV -(R6) R1

; DST PRE DEC
INC R0
MOV R1 -(R6)

; SRC INDEXADO
INC R0
MOV 2(R1) -(R6)  ; escreve T_IDX na pilha

; DST INDEXADO
INC R0
MOV R0 2(R1)   ; escreve em T_IDX

; SRC INDIRETO
INC R0
MOV #T R1
MOV (R1) -(R6)  ; escreve T na pilha

; DST INDIRETO
INC R0
MOV #1 (R1)     ; escreve em T

; SRC INDIRETO POS INC
INC R0
MOV TMP -(R6)   ; Mesmo que MOV ((R7)+) para a pilha 

; DST INDIRETO POS INC
INC R0
MOV R0 TI_POS_INC   ; Mesmo que MOV R0 ((R7)+)

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
MOV (-(R1)) -(R6)   ; escreve TI_PRE_DEC na pilha

; SRC INDIRETO PRE DEC
INC R0
MOV #TMP R1
INC R1
INC R1
MOV R0 (-(R1))      ; escreve em TI_PRE_DEC

; SRC INDIRETO INDEXADO
INC R0
MOV #TMP R1
MOV (-2(R1)) -(R6)  ; escreve TI_IDX na pilha

; SRC INDIRETO INDEXADO
INC R0
MOV #TMP R1
MOV R0 (-2(R1))     ; escreve em TI_IDX


; FLAGS
INC R0
SCC NCV
CCC Z
MOV #0 R1
BNE ERR
BMI ERR
BCC ERR
BVS ERR

INC R0
SCC ZNCV
MOV #1 R1
BEQ ERR
BMI ERR
BCC ERR
BVS ERR

INC R0
SCC ZCV
CCC N
MOV #-1 R1
BEQ ERR
BPL ERR
BCC ERR
BVS ERR

JMP END
END:
MOV #0 E ; ERRO É INVERTO PARA CASO MOV NÃO ESTIVER FUNCIONAR O ERRO SERÁ INDICADO
MOV R0 COUNTER
ERR:
HLT

ORG 1024
STACK_1: 5
STACK: 0
E: 1
COUNTER: 0
FALSE: H0000
TRUE: HFFFF
A: HF0F0
NOT_A: H0F0F
T_PRE_DEC: 1
T: 2
T_IDX:3
TI_POS_INC: 5
TI_PRE_DEC:6
TI_IDX: 7
TMP: 8