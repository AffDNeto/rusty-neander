; Testes SBC
CLR R0
CLR R1
MOV #STACK R6 ; inicia pilha

JMP START
JMP_ERR:
JMP ERR
START:
; FAZ NADA COM C DESLIGADO
INC R0
MOV #0 R1
CCC C
SBC R1
CMP R1 #0
BNE JMP_ERR

; CASO SIMPLES
INC R0
MOV #1 R1
CCC Z
SCC CNV
SBC R1
BNE JMP_ERR
BMI JMP_ERR
BVS JMP_ERR
BCC JMP_ERR ; Borrow nao acontece então C fica ligado
CMP R1 #0
BNE JMP_ERR
MOV R1 -(R6)

; BORROW E NEGATIVAÇÃO
INC R0
MOV #0 R1
CCC N
SCC VZC
SBC R1
BPL ERR
BVS ERR
BEQ ERR
BCS ERR ; Borrow acontece então C é desligado
CMP R1 MAX
BNE ERR
MOV R1 -(R6)

; OVERFLOW
INC R0
MOV MINN R1
CCC V
SCC NZC
SBC R1
BEQ ERR
BCC ERR
BVC ERR
BMI ERR
CMP R1 MAXN
BNE ERR
MOV R1 -(R6)

; MODOS DE ENDERECAMENTO
;PRE DEC
MOV #T R1
SCC C
SBC -(R1)   ; escreve em T_PRE_DEC
;POS INC
SCC C
SBC #0   ; mesmo que INC (R7)+
;INDIRETO
MOV #T R1
SCC C
SBC (R1)    ; escreve em T
;INDEXADO
SCC C
SBC 2(R1)   ; escreve em T_IDX
;IND POS INC
MOV #TI_POS_INC TMP
MOV #TMP R1
SCC C
SBC ((R1)+)
;IND PRE DEC
MOV #TI_PRE_DEC TMP
SCC C
SBC (-(R1)) ; escreve em TI_PRE_DEC
;IND INDEXADO
MOV #TI_IDX TMP
MOV #TMP R1
INC R1
SCC C
SBC (-1(R1))   ; escreve em TI_IDX

JMP END
ERR:
MOV #1 E
END:
MOV R0 COUNTER
HLT

ORG 1024
STACK: 5
E: 0
COUNTER: 0
MAX: HFFFF
MAXN: H7FFF
MINN: H8000
T_PRE_DEC: 1
T: 2
T_IDX:3
TI_POS_INC: 5
TI_PRE_DEC:6
TI_IDX: 7
TMP: 8
