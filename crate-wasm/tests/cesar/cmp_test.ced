; Testes CMP
CLR R0
CLR R1
MOV MAX R3

JMP TST_START
JMP_ERR:
JMP ERR
TST_START:

; TESTE ENDEREÃ‡AMENTO
; SRC/DST REGISTRADOR
INC R0
MOV R3 R1
CMP R0 R1
BEQ JMP_ERR

; SRC POS INC
INC R0
MOV R3 R1
CMP #2 R1   ; #TAG = (R7)+
BEQ JMP_ERR

; DST POS INC
INC R0
MOV R3 R1
CMP R1 #1   ; mesmo que CMP R1 (R7)+
BEQ JMP_ERR

; SRC PRE DEC
INC R0
MOV R3 R1
CMP -(R6) R1
BEQ JMP_ERR

; DST PRE DEC
INC R0
MOV R3 R1
CMP R1 -(R6)
BEQ JMP_ERR

; SRC INDEXADO
INC R0
MOV #T R2
CMP 2(R2) -(R6)
BEQ JMP_ERR

; DST INDEXADO
INC R0
MOV #T R2
MOV R3 R1
CMP R1 2(R2)   ; escreve em T_IDX
BEQ JMP_ERR

; SRC INDIRETO
INC R0
MOV #T R2
CMP (R2) -(R6)
BEQ JMP_ERR

; DST INDIRETO
INC R0
MOV #T R2
MOV R3 R1
CMP R1 (R2)
BEQ JMP_ERR

; SRC INDIRETO POS INC
INC R0
CMP TMP -(R6)   ;TMP=((R7)+) para a pilha 
BEQ JMP_ERR

; DST INDIRETO POS INC
INC R0
CMP R1 TI_POS_INC   ; Mesmo que CMP R1 ((R7)+)
BEQ JMP_ERR

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
CMP (-(R1)) -(R6)   ; escreve TI_PRE_DEC na pilha
BEQ JMP_ERR2

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
CMP R0 (-(R1))      ; escreve em TI_PRE_DEC
BEQ JMP_ERR2

JMP CONTINUE
JMP_ERR2:
JMP ERR
CONTINUE:
; SRC INDIRETO INDEXADO
INC R0
MOV #TI_IDX TMP
MOV #TMP R1
CMP (-2(R1)) -(R6)  ; escreve TI_IDX na pilha
BEQ ERR

; SRC INDIRETO INDEXADO
INC R0
MOV #TI_IDX TMP
MOV #TMP R1
CMP R0 (-2(R1))     ; escreve em TI_IDX
BEQ ERR

; FLAGS
INC R0
MOV #1 R1
SCC NZV
CCC C
CMP R1 #1
BNE ERR
BMI ERR
BVS ERR
BCS ERR

; BORROW
INC R0
MOV #0 R1
SCC NVC
CCC Z
CMP R1 #1
BEQ ERR
BPL ERR
BVS ERR
BCC ERR


; OVERFLOW
INC R0
MOV MINN R1
SCC Z
CCC NCV
CMP R1 #1
BEQ ERR
BMI ERR
BVC ERR
BCS ERR

JMP END
END:
MOV #0 E
ERR:
MOV R0 COUNTER
HLT

ORG 1024
STACK: 0
E: 1
COUNTER: 0
MAX: HFFFF
MINN:H8000
MAXN:H7FFF
T_PRE_DEC: 1
T: 2
T_IDX:3
TI_POS_INC: 5
TI_PRE_DEC:6
TI_IDX: 7
TMP: 8