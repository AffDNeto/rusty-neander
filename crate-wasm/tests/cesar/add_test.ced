; Testes ADD
CLR R0
CLR R1
MOV #STACK R6

; TESTE ENDEREÇAMENTO
; SRC/DST REGISTRADOR
INC R0
ADD R0 R1
MOV R1 -(R6)

; SRC POS INC
INC R0
ADD #2 R1   ; #TAG = (R7)+
MOV R1 -(R6)

; DST POS INC
INC R0
ADD R1 #0   ; mesmo que ADD R1 (R7)+

; SRC PRE DEC
INC R0
ADD -(R6) R1
MOV R1 -(R6)

; DST PRE DEC
INC R0
ADD R1 -(R6)

; SRC INDEXADO
INC R0
MOV #T R2
ADD 2(R2) -(R6)

; DST INDEXADO
INC R0
MOV #T R2
ADD R1 2(R2)   ; escreve em T_IDX

; SRC INDIRETO
INC R0
MOV #T R2
ADD (R2) -(R6)

; DST INDIRETO
INC R0
MOV #T R2
ADD R1 (R2)

; SRC INDIRETO POS INC
INC R0
ADD TMP -(R6)   ;TMP=((R7)+) para a pilha 

; DST INDIRETO POS INC
INC R0
ADD R0 TI_POS_INC   ; Mesmo que MOV R0 ((R7)+)

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
ADD (-(R1)) -(R6)   ; escreve TI_PRE_DEC na pilha

; SRC INDIRETO PRE DEC
INC R0
MOV #TI_PRE_DEC TMP
MOV #TMP R1
INC R1
INC R1
ADD R0 (-(R1))      ; escreve em TI_PRE_DEC

; SRC INDIRETO INDEXADO
INC R0
MOV #TI_IDX TMP
MOV #TMP R1
INC R1
ADD (-1(R1)) -(R6)  ; escreve TI_IDX na pilha

; SRC INDIRETO INDEXADO
INC R0
MOV #TI_IDX TMP
MOV #TMP R1
INC R1
ADD R0 (-1(R1))     ; escreve em TI_IDX


; FLAGS
; CASO NORMAL
INC R0
CLR R1
SCC NZCV
ADD #1 R1
BEQ ERR
BMI ERR
BVS ERR
BCS ERR

; CARRY
INC R0
MOV MAX R1
SCC NV
CCC ZC
ADD #1 R1
BNE ERR
BMI ERR
BVS ERR
BCC ERR


; OVERFLOW
INC R0
MOV MAXN R1
SCC ZC
CCC NV
ADD #1 R1
BEQ ERR
BPL ERR
BVC ERR
BCS ERR

JMP END
END:
MOV #0 E ; ERRO É INVERTO PARA CASO MOV NÃO ESTIVER FUNCIONAR O ERRO SERÁ INDICADO
ERR:
MOV R0 COUNTER
HLT

ORG 1024
STACK: 0
E: 1
COUNTER: 0
MAX: HFFFF
MINN:H8000
MAXN:H7FFF
T_PRE_DEC: 1
T: 2
T_IDX:3
TI_POS_INC: 5
TI_PRE_DEC:6
TI_IDX: 7
TMP: 8