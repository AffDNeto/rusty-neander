; Testa adicao
; + com + = +
LDA ONE ; AC = 1
ADD ONE ;AC = AC + 1 = 2
STA T0
JZ ERR 	; Jump se AC == 0 para fim de execucao
JN ERR 	; Jump se AC < 0 para fim de execucao
ADD M2  ; AC = 2 - 2
JZ P1
JMP ERR

; + com - = -
P1:
LDA ONE	; AC = 1
ADD MINN; AC = 1 + 128(-128) = 129(-127)
STA T1
JZ ERR	
JN P2	
JMP ERR
P2:
ADD MAXN; AC = -127 + 127
JZ P3
JMP ERR

; + com - = 0
P3:
LDA ONE	; AC = 1
ADD MAX	; AC = 1 + 255(-1) = 0
STA T2
JN ERR	
JZ P4	
JMP ERR

; - com - = -
P4:
LDA MAX ; AC = 255
ADD MAX ; AC = 255(-1) + 255(-1) = 254(-2)
STA T3
JZ ERR
JN P5
JMP ERR
P5:
ADD TWO ; AC = -2 + 2
JZ P6
JMP ERR

; - com - = + (overflow)
P6:
LDA MINN; AC = 128(-128)
ADD MAX ; AC = 128(-128) + 255(-1) = 127
STA T4
JZ ERR
JN ERR
ADD M127; AC = 127 - 127
JZ P7
JMP ERR

; + com + = - (overflow)
P7:
LDA MAXN; AC = 127
ADD ONE	; AC = 127 + 1 = 128(-128)
STA T5
JZ ERR
JN P8
JMP ERR
P8:
ADD MINN; AC = 128 + 128 = 0 e sobra 1
JZ END
JMP ERR

ERR: 
LDA ONE
STA E
END:
HLT

ORG 128
T0: 1
T1: 1
T2: 1
T3: 1
T4: 1
T5: 1
ZERO: 0	
ONE: 1
TWO: 2
MAX: 255; Valor maximo em byte
MAXN:127; Valor maximo em complemento de 2
MINN:128; Valor minimo negativo em complemento de 2
M2: 254 ; -2
M127:129; -127	
E: 0    ; Variavel para indicar que teve um erro no teste